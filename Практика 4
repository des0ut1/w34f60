⣿⠟⣫⢸⣿⢿⣿⣾⣿⢿⣿⣿⢻⣿⣿⣿⢿⣿⣿⣿⢸⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⠟⣫⢸⣿⢿⣿⣾⣿⢿⣿⣿⢻⣿⣿⣿⢿⣿⣿⣿⢸⣿⣼⣿⣿⣿⣿⣿⣿⣿⠄⠄⠄⠄⢠⣿⣿⣿⣿⣿⢻⣿⣿⣿⣿⣿⣿⣿⣿⣯⢻⣿⣿⣿⣿⣆⠄⠄⠄⣿⠟⣫⢸⣿⢿⣿⣾⣿⢿⣿⣿⢻⣿⣿⣿⢿⣿⣿⣿⢸⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⠟⣫⢸⣿⢿⣿⣾⣿⢿⣿⣿⢻⣿⣿⣿⢿⣿⣿⣿⢸⣿⣼⣿⣿⣿⣿⣿⣿⣿
⡟⢸⣟⢸⣿⠸⣷⣝⢻⠘⣿⣿⢸⢿⣿⣿⠄⣿⣿⣿⡆⢿⣿⣼⣿⣿⣿⣿⢹⣿⡟⢸⣟⢸⣿⠸⣷⣝⢻⠘⣿⣿⢸⢿⣿⣿⠄⣿⣿⣿⡆⢿⣿⣼⣿⣿⣿⣿⢹⣿⠄⠄⣼⢀⣿⣿⣿⣿⣏⡏⠄⠹⣿⣿⣿⣿⣿⣿⣿⣿⣧⢻⣿⣿⣿⣿⡆⠄⠄⡟⢸⣟⢸⣿⠸⣷⣝⢻⠘⣿⣿⢸⢿⣿⣿⠄⣿⣿⣿⡆⢿⣿⣼⣿⣿⣿⣿⢹⣿⡟⢸⣟⢸⣿⠸⣷⣝⢻⠘⣿⣿⢸⢿⣿⣿⠄⣿⣿⣿⡆⢿⣿⣼⣿⣿⣿⣿⢹⣿
⡇⣿⡿⣿⣿⢟⠛⠛⠿⡢⢻⣿⣾⣞⣿⡏⠖⢸⣿⢣⣷⡸⣇⣿⣿⣿⢼⡿⣿⣿⡇⣿⡿⣿⣿⢟⠛⠛⠿⡢⢻⣿⣾⣞⣿⡏⠖⢸⣿⢣⣷⡸⣇⣿⣿⣿⢼⡿⣿⣿⠄⠄⡟⣼⣿⣿⣿⣿⣿⠄⠄⠄⠈⠻⣿⣿⣿⣿⣿⣿⣿⣇⢻⣿⣿⣿⣿⠄⠄⡇⣿⡿⣿⣿⢟⠛⠛⠿⡢⢻⣿⣾⣞⣿⡏⠖⢸⣿⢣⣷⡸⣇⣿⣿⣿⢼⡿⣿⣿⡇⣿⡿⣿⣿⢟⠛⠛⠿⡢⢻⣿⣾⣞⣿⡏⠖⢸⣿⢣⣷⡸⣇⣿⣿⣿⢼⡿⣿⣿
⣡⢿⡷⣿⣿⣾⣿⣷⣶⣮⣄⣿⣏⣸⣻⣃⠭⠄⠛⠙⠛⠳⠋⣿⣿⣇⠙⣿⢸⣿⣡⢿⡷⣿⣿⣾⣿⣷⣶⣮⣄⣿⣏⣸⣻⣃⠭⠄⠛⠙⠛⠳⠋⣿⣿⣇⠙⣿⢸⣿⠄⢰⠃⣿⣿⠿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠙⠿⣿⣿⣿⣿⣿⠄⢿⣿⣿⣿⡄⠄⣡⢿⡷⣿⣿⣾⣿⣷⣶⣮⣄⣿⣏⣸⣻⣃⠭⠄⠛⠙⠛⠳⠋⣿⣿⣇⠙⣿⢸⣿⣡⢿⡷⣿⣿⣾⣿⣷⣶⣮⣄⣿⣏⣸⣻⣃⠭⠄⠛⠙⠛⠳⠋⣿⣿⣇⠙⣿⢸⣿
⠫⣿⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⠻⣿⣾⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣹⢷⣿⡼⠋⠫⣿⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⠻⣿⣾⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣹⢷⣿⡼⠋⠄⢸⢠⣿⣿⣧⡙⣿⣿⡆⠄⠄⠄⠄⠄⠄⠄⠈⠛⢿⣿⣿⡇⠸⣿⡿⣸⡇⠄⠫⣿⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⠻⣿⣾⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣹⢷⣿⡼⠋⠫⣿⣧⣿⣿⣿⣿⣿⣿⣿⣿⣿⠻⣿⣾⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣹⢷⣿⡼⠋
⠄⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣿⣿⣿⠄⠄⠄⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣿⣿⣿⠄⠄⠄⠈⡆⣿⣿⣿⣿⣦⡙⠳⠄⠄⠄⠄⠄⠄⢀⣠⣤⣀⣈⠙⠃⠄⠿⢇⣿⡇⠄⠄⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣿⣿⣿⠄⠄⠄⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣿⣿⣿⠄⠄
⠄⠄⢻⢹⣿⠸⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣼⣿⣿⣿⣿⡟⠄⠄⠄⠄⢻⢹⣿⠸⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣼⣿⣿⣿⣿⡟⠄⠄⠄⠄⡇⢿⣿⣿⣿⣿⡇⠄⠄⠄⠄⠄⣠⣶⣿⣿⣿⣿⣿⣿⣷⣆⡀⣼⣿⡇⠄⠄⠄⢻⢹⣿⠸⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣼⣿⣿⣿⣿⡟⠄⠄⠄⠄⢻⢹⣿⠸⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣼⣿⣿⣿⣿⡟⠄⠄
⠄⠄⠈⢸⣿⠄⠙⢿⣿⣿⣹⣿⣿⣿⣿⣟⡃⣽⣿⣿⡟⠁⣿⣿⢻⣿⣿⢿⠄⠄⠄⠄⠈⢸⣿⠄⠙⢿⣿⣿⣹⣿⣿⣿⣿⣟⡃⣽⣿⣿⡟⠁⣿⣿⢻⣿⣿⢿⠄⠄⠄⠄⢹⡘⣿⣿⣿⢿⣷⡀⠄⢀⣴⣾⣟⠉⠉⠉⠉⣽⣿⣿⣿⣿⠇⢹⣿⠃⠄⠄⠄⠈⢸⣿⠄⠙⢿⣿⣿⣹⣿⣿⣿⣿⣟⡃⣽⣿⣿⡟⠁⣿⣿⢻⣿⣿⢿⠄⠄⠄⠄⠈⢸⣿⠄⠙⢿⣿⣿⣹⣿⣿⣿⣿⣟⡃⣽⣿⣿⡟⠁⣿⣿⢻⣿⣿⢿⠄⠄
⠄⠄⠄⠘⣿⡄⠄⠄⠙⢿⣿⣿⣾⣿⣷⣿⣿⣿⠟⠁⠄⠄⣿⣿⣾⣿⡟⣿⠄⠄⠄⠄⠄⠘⣿⡄⠄⠄⠙⢿⣿⣿⣾⣿⣷⣿⣿⣿⠟⠁⠄⠄⣿⣿⣾⣿⡟⣿⠄⠄⠄⠄⠄⢷⡘⢿⣿⣎⢻⣷⠰⣿⣿⣿⣿⣦⣀⣀⣴⣿⣿⣿⠟⢫⡾⢸⡟⠄.⠄⠄⠄⠘⣿⡄⠄⠄⠙⢿⣿⣿⣾⣿⣷⣿⣿⣿⠟⠁⠄⠄⣿⣿⣾⣿⡟⣿⠄⠄⠄⠄⠄⠘⣿⡄⠄⠄⠙⢿⣿⣿⣾⣿⣷⣿⣿⣿⠟⠁⠄⠄⣿⣿⣾⣿⡟⣿⠄⠄
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Конструкция when Конструкция when Конструкция when Конструкция when Конструкция when Конструкция when Конструкция when Конструкция when Конструкция when Конструкция when Конструкция when Конструкция when 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Практическая работа 4
//1
fun main() {
    print("Введите день недели(1-7): ")
    val zxc = readLine()?.toIntOrNull()
    if (zxc in 1..7) {
        when (zxc) {
            1 -> println("Понедельник")
            2 -> println("Вторник")
            3 -> println("Среда")
            4 -> println("Четверрг")
            5 -> println("Пятница")
            6 -> println("Суббота")
            7 -> println("Воскресенье")
        }
    } else {
        println("Не корректный ввод.")
    }
}

//Практическая работа 4
//2
fun main() {
    print("Введите сторону A: ")
    val zxc = readLine()?.toDoubleOrNull()
    print("Введите сторону B: ")
    val zx = readLine()?.toDoubleOrNull()
    print("Введите сторону C: ")
    val z = readLine()?.toDoubleOrNull()

    if (zxc != null && zx != null && z != null) {
        when {
            zxc == zx && zx == z -> println("Это равносторонний треугольник")
            zxc == zx || zx == z || zxc == z -> println("Это равнобедренный треугольник")
            zxc * zxc == zx * zx + z * z ||
                    zx * zx == zxc * zxc + z * z ||
                    z * z == zxc * zxc + zx * zx -> println("Это прямоугольный треугольник")
            else -> println("Это скалярный треугольник")
        }
    } else {
        println("Неверный ввод")
    }
}

//Практическая работа 4
//3
fun main() {
    print("Введите числовую оценку (0-100): ")
    val zxc = readLine()?.toIntOrNull()

    if (zxc != null) {
        when {
            zxc >= 90 -> println("A")
            zxc >= 80 -> println("B")
            zxc >= 70 -> println("C")
            zxc >= 60 -> println("D")
            else -> println("F")
        }
    } else {
        println("Неверный ввод")
    }
}

//Практическая работа 4
//4
import java.util.Scanner
fun main() {
    val zxc = Scanner(System.`in`)
    print("Введите час дня (0-23): ")
    val zx = zxc.nextInt()
    when {
        zx < 6 -> println("Ночь")
        zx < 12 -> println("Утро")
        zx < 18 -> println("День")
        else -> println("Вечер")
    }
}

//Практическая работа 4
//5
fun main() {
    print("Введите число: ")
    val zxc = readLine()!!.toDouble()
    when {
        zxc > 0 -> println("Число положительное")
        zxc < 0 -> println("Число отрицательное")
        else -> println("Число равно нулю")
    }
}

//Практическая работа 4
//6
import kotlin.random.Random
fun main() {
    val zxc = Random.nextInt(1, 1000)
    println("Угадай число от 1 до 1000 с 5 попыток и получи новый IPhone 16 PRO MAX!!!")
    while (true) {
        print("Ваше предположение: ")
        val zx = readLine()!!.toInt()
        when {
            zx < zxc -> println("Число слишком маленькое. Попробуйте снова!")
            zx > zxc -> println("Число слишком большое. Попробуйте снова!")
            else -> {
                println("Поздравляем! Вы угадали число $zxc!")
                break
            }
        }
    }
}

//Практическая работа 4
//7
fun main() {
    print("Введите строку: ")
    val zxc = readLine()!!
    val xzc = zxc.length
    println("Длина строки: $xzc")
}

//Практическая работа 4
//8
fun main() {
    print("Введите тип пищи (мясо, рыба, овощи, фрукты): ")
    val zxcc = readLine()!!
    var zxc = 0
    when (zxcc.lowercase()) {
        "мясо" -> zxc = 30
        "рыба" -> zxc = 20
        "овощи" -> zxc = 15
        "фрукты" -> zxc = 10
        else -> println("Неизвестный тип пищи. Введите другой тип.")
    }
    if (zxc > 0) {
        println("Время приготовления: $zxc минут")
    }
}

//Практическая работа 4
//9
fun main() {
    print("Введите строку: ")
    val zxc = readLine()!!
    val xzc = zxc.length
    println("Длина строки: $xzc")
}

//Практическая работа 4
//10
fun main() {
    print("Введите способ оплаты (наличные, кредитная карта, PayPal): ")
    val paymentMethod = readLine()!!
    var zxc = ""
    when (paymentMethod.lowercase()) {
        "наличные" -> zxc = "Спасибо за оплату наличными!"
        "кредитная карта" -> zxc = "Спасибо за оплату кредитной картой!"
        "paypal" -> zxc = "Спасибо за оплату через PayPal!"
        else -> zxc = "Неизвестный способ оплаты. Пожалуйста, выберите другой способ."
    }
    println(zxc)
}

//Практическая работа 4
//11
fun main() {
    print("Введите группу крови (A, B, AB, O): ")
    val zxc = readLine()!!
    var zxcc = ""
    when (zxc.uppercase()) {
        "A" -> zxcc = "A, O"
        "B" -> zxcc = "B, O"
        "AB" -> zxcc = "AB, A, B, O"
        "O" -> zxcc = "O"
        else -> println("Неизвестная группа крови. Пожалуйста, введите другую группу.")
    }
    if (zxcc.isNotEmpty()) {
        println("Совместимые типы крови для переливания: $zxcc")
    }
}

//Практическая работа 4
//12
fun main() {
    print("Введите страну (США, Россия, Япония и т.д.): ")
    val zxc = readLine()!!
    var zx = ""
    when (zxc.lowercase()) {
        "сша" -> zx = "американец"
        "россия" -> zx = "русский"
        "япония" -> zx = "японец"
        "китай" -> zx = "китаец"
        "франция" -> zx = "француз"
        "германия" -> zx = "немец"
        "италия" -> zx = "итальянец"
        else -> zx = "неизвестная национальность"
    }
    println("Национальность: $zx")
}

//Практическая работа 4
//13
fun main() {
    print("Введите код ошибки (100, 200, 300): ")
    val zxc = readLine()!!
    var zxczxc = ""
    when (zxc) {
        "100" -> zxczxc = "Ошибка сети"
        "200" -> zxczxc = "Ошибка сервера"
        "300" -> zxczxc = "Ошибка базы данных"
        "400" -> zxczxc = "Ошибка авторизации"
        "500" -> zxczxc = "Внутренняя ошибка сервера"
        else -> zxczxc = "Неизвестная ошибка"
    }
    println("Ошибка: $zxczxc")
}
